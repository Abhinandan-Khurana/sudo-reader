@tailwind base;
@tailwind components;
@tailwind utilities;

body {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto",
        "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans",
        "Helvetica Neue", sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* .lindy-icon {
    background-image: conic-gradient(
        rgba(255, 23, 68, 0.5),
        rgba(213, 0, 249, 0.5),
        rgba(61, 90, 254, 0.5),
        rgba(0, 176, 255, 0.5),
        rgba(29, 233, 182, 0.5),
        rgba(118, 255, 3, 0.5),
        rgba(255, 234, 0, 0.5),
        rgba(255, 145, 0, 0.5),
        rgba(255, 23, 68, 0.5)
    );
    mask: url(assets/logo.svg);
} */

.tab-rounded-spacer {
    box-shadow: 0 0 0 40px white; /* theme(colors.background); */
}
@media (prefers-color-scheme: dark) {
    .tab-rounded-spacer {
        box-shadow: 0 0 0 40px theme(colors.backgroundDark);
    }
}

.tab-page-container {
    position: relative;
    overflow-x: hidden;
}

/* before tab enter */
.move-tab-left-enter,
.move-tab-right-enter {
    position: absolute;
    opacity: 0;
}
.move-tab-left-enter {
    transform: translateX(-200px);
}
.move-tab-right-enter {
    transform: translateX(200px);
}
/* animate tab enter */
.tab-page-enter-active {
    opacity: 1;
    transform: translateX(0);

    /* easings.net easeOutCubic */
    transition: opacity 0.2s cubic-bezier(0.33, 1, 0.68, 1),
        transform 0.2s cubic-bezier(0.33, 1, 0.68, 1);
    transition-delay: 0.1s;
}

/* before tab leave */
.move-tab-left-exit,
.move-tab-right-exit {
    position: absolute;
    opacity: 1;
    transform: translateX(0);
}
.move-tab-left-exit {
    --translate-to: 200px;
}
.move-tab-right-exit {
    --translate-to: -200px;
}
/* animate tab leave */
.tab-page-exit-active {
    opacity: 0;
    transform: translateX(var(--translate-to));

    /* easings.net easeInCubic */
    transition: opacity 0.2s cubic-bezier(0.32, 0, 0.67, 0),
        transform 0.2s cubic-bezier(0.32, 0, 0.67, 0);
}

.article-container:hover > .star-icon {
    visibility: visible;
    opacity: 1;
}
.star-icon:hover > svg {
    transform: scale(115%);
    transform-origin: center;
}

.stacked-articles-list > .article-container {
    transition: transform 0.3s cubic-bezier(0.33, 1, 0.68, 1);
}
.stacked-articles-list:hover > .article-container {
    transform: translate(0, 0) rotate(0) !important;
    z-index: 200 !important;
}

.sbui-btn-primary,
.sbui-checkbox[type="checkbox"]:checked {
    background-color: hsl(51, 80%, 64%) !important;
}
.sbui-typography-link {
    color: rgba(75, 85, 99, var(--tw-text-opacity)) !important;
}
.sbui-input:focus {
    box-shadow: 0 0 0 2px rgba(237 215 91 / 10%) !important;
}
.sbui-input:focus,
.sbui-checkbox:hover {
    border-color: hsl(51, 80%, 64%) !important;
}

.crisp-client.crisp-client .cc-52lo .cc-1s3d,
.crisp-client.crisp-client .cc-52lo .cc-1801:before,
.crisp-client.crisp-client .cc-52lo .cc-1801:after {
    background-color: hsl(51, 80%, 64%) !important;
}
.crisp-client.crisp-client .cc-52lo .cc-guf7,
.crisp-client .cc-52lo .cc-u6xv:hover {
    color: rgb(41 37 36) !important;
}
.crisp-client.crisp-client .cc-52lo .cc-kegp .cc-1oun .cc-1qth {
    transform: scale(0.9) translate(0, 10px);
}
@media (prefers-color-scheme: dark) {
    .crisp-client.crisp-client .cc-52lo .cc-1s3d,
    .crisp-client.crisp-client .cc-52lo .cc-1801:before,
    .crisp-client.crisp-client .cc-52lo .cc-1801:after {
        background-color: hsl(51, 80%, 43%) !important;
    }
    .crisp-client.crisp-client .cc-3ycs {
        filter: brightness(0.15) !important;
    }

    :root {
        color-scheme: dark;
    }
}

.ui-tag.no-background:not(:hover) {
    background: none !important;
}
.ui-tag.no-background:not(:hover) > .count {
    opacity: 0 !important;
}

/* https://github.com/vercel/next.js/issues/18915 */
.image > span {
    display: block !important;
}

.search-topic:hover > .search-topic-name {
    opacity: 0.5;
}
.search-topic:hover > .search-topic-delete {
    opacity: 1;
}

.react-activity-calendar__calendar
    > g:not(.react-activity-calendar__legend-month)
    > rect {
    stroke: none !important;
    cursor: pointer;
}
.react-activity-calendar__calendar
    > g:not(.react-activity-calendar__legend-month)
    > rect:hover {
    stroke: black !important;
}
